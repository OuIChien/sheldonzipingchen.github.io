---
title: "工作总结"
date: 2015-06-20 15:15:29 +0800
description: 在电信的工作总结
---

这几年在电信的子公司工作。从之前的一个小公司，到一个可以给几千万的用户提供服务的平台里。学到非常多的东西。也有很多是需要避免的。还有一些，是对这样的级别的公司适用的，但不适合我现在的工作的东西，都需要总结一下。为了以后更好的工作。

<!--more-->

## 关于开发环境

这里特指一些开发环境。因为开发是基于 jvm，其实只是用到了 java 语言，像 scala 什么的，都没有用到。构建工具使用的是 ant。这大概是因为早期，那时还没 maven 什么事，更别提 gradle 了。

服务器分开发环境、测试环境、体验环境和生产环境。

开发环境给平时开发人员使用，安装了一个共用的开发使用的数据库（基本上都是 MySQL）。如果工程比较复杂，分前台 web 工程和后台服务，开发环境还会跑了那些后台服务 ，这样，开发前台 web 工程的同学们只需要调用开发环境的后台服务的接口即可，不需要自己单独起进程。

测试环境是开发人员在完成了一个阶段的功能之后，发布到测试环境给测试人员测试使用。起的服务这些，和开发环境基本类似。

体验环境是给客户使用的，这里都有连接外网，而且数据基本上会和生产保持一致，在功能通过测试之后，就可以发布到体验环境，给客户使用，看这些功能是否真的可以满足需求。这样可以避免在正式的环境里，才发现各种各样的问题。

生产环境，也就是正式环境了，前面的环境好像都只是使用了虚拟机，这里都会使用物理机了。而且可能一台服务器就只跑了一个 web 进程，或者后台服务进程什么的。比如说，一个 nginx 服务，一个 resin 服务，两部跑着 dubbo 服务。

## 关于业务

我在公司的这几年，做的基本上只跟号码百事通的业务有关。早几年感觉还很不错，但越来越觉得不太对劲。数据可能不太真实。我觉得可能跟这几年电信的业务不太理想有关。想从传统行业转到移动互联网业务，任重而道远。说实话，我不太看好能转型。就冲着现在什么业务都需要开个电信号才能提供服务，大家就不怎么想玩了。可能业务是好业务。也是大家需要的。

做得好的是 CRM 系统。各种各样的 CRM 系统。可能这也是使用 java 的一个原因。需求的变化其实不大。都是一个后台的管理服务系统。然后就是各种各样的数据操作。

## 关于人事

很复杂的人事关系，特别是这几年。但如果真说起来，也很简单，只要部门经理高兴就行了。会不会干活，其实不重要。

## 一些我的想法

我的想法都是对于开发方面的，因为对于业务还有人事，真的无能为力。或许公司大了，都是这样的吧。

首先是持续集成。其实现在想想，觉得很不可思议的，这么大的公司，项目也都不算小。居然没有单元测试，更别提集成测试了。

项目初期没有这些一点感觉都没有，特别是单元测试，但到了后期，人员发生变化，又需要变更前期的需求的时候，问题就来了。在修改完之后，即使是有测试人员测试完，也有可能会出现一些意外变更的情况。就即使人员也没有变化，可能也记不清有没有引入其它的 bug。

然后是对于 ORM 框架的使用问题。不知道大家的想法。但对于 ORM 的使用，公司里很多人是不同意的。原因是效率不够好。

我感觉 ORM 的效率其实不差，麻烦点的是多表的关联查询，但就是有多表关联查询的时候，我也没发现有太多需要使用的情况。如果真有效率问题，其实加上缓存，就可以完美的解决这个问题了。而且开发的效率确实比 SQL 高。虽然不方便 DBA 优化，但，现在项目里好像也没遇到需要 DBA 优化 SQL 查询的时候。

再次是项目发布的问题。可能是 BOSS 系统太复杂了，跟其它的部门一起调接口，绝对是一件很痛苦的事情。如果 BOSS 系统的接口有问题的话，那只能是第二天，才会把前一天的问题发布上去。换句话说，如果这天一早发现了一个问题，只能第二天，才能修复这问题。如果第二天发布后这问题还没修复，那就更悲剧了。

## 总结

现在要在一家小的初创公司，东西比以前多了很多，而开发的工作其实只能由我一个人来完成。想想黑客与画家里的一句话，如果现在我的工作效率只是业内的平均水平，可能公司就会面临倒闭的风险。所以，无论是开发、测试还是部署什么的，都应该按更为敏捷的方式来进行。

我现在选择了用 python 来进行之后的工作，目的也是这个。尽可能的提高开发的效率。其实，根据测试，性能也还可以。接下来，要把单元测试补上，前段时间开发的过程中，没好好写单元测试，至少，要把关键的单元测试补上。

最后，我想用计算机程序的构造和解释里的一句话，来结束这篇总结吧，或许，过段时间还想到什么，再回来修改。

如果说艺术解释了我们的梦想，那么计算机就是以程序的名义执行着它们。
